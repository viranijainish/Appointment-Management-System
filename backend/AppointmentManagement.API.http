@AppointmentManagement.API_HostAddress = http://localhost:5184

# Appointment Management API Endpoints

### Get all appointments
GET {{AppointmentManagement.API_HostAddress}}/api/appointments
Accept: application/json

###

### Get appointment by ID
GET {{AppointmentManagement.API_HostAddress}}/api/appointments/2
Accept: application/json

###

### Create new appointment
POST {{AppointmentManagement.API_HostAddress}}/api/appointments
Content-Type: application/json

{
  "patientName": "John Doe",
  "startTime": "2025-12-15T10:00:00",
  "endTime": "2025-12-15T11:00:00",
  "doctorName": "Dr. Smith"
}

###

### Update existing appointment
PUT {{AppointmentManagement.API_HostAddress}}/api/appointments/2
Content-Type: application/json

{
  "id": 2,
  "patientName": "John Doe Updated",
  "startTime": "2025-12-15T14:00:00",
  "endTime": "2025-12-15T15:00:00",
  "doctorName": "Dr. Johnson"
}

###

### Delete appointment
DELETE {{AppointmentManagement.API_HostAddress}}/api/appointments/2
Accept: application/json

###

# Additional test scenarios

### Create appointment with validation error (past date)
POST {{AppointmentManagement.API_HostAddress}}/api/appointments
Content-Type: application/json

{
  "patientName": "Jane Smith",
  "startTime": "2023-01-01T10:00:00",
  "endTime": "2023-01-01T11:00:00",
  "doctorName": "Dr. Brown"
}

###

### Create appointment with validation error (end time before start time)
POST {{AppointmentManagement.API_HostAddress}}/api/appointments
Content-Type: application/json

{
  "patientName": "Bob Wilson",
  "startTime": "2024-12-15T11:00:00",
  "endTime": "2024-12-15T10:00:00",
  "doctorName": "Dr. Davis"
}

###

### Create appointment with missing required fields
POST {{AppointmentManagement.API_HostAddress}}/api/appointments
Content-Type: application/json

{
  "patientName": "",
  "startTime": "2024-12-15T10:00:00",
  "endTime": "2024-12-15T11:00:00",
  "doctorName": ""
}

###

### Create multiple appointments for testing overlaps
POST {{AppointmentManagement.API_HostAddress}}/api/appointments
Content-Type: application/json

{
  "patientName": "Alice Johnson",
  "startTime": "2024-12-15T09:00:00",
  "endTime": "2024-12-15T10:00:00",
  "doctorName": "Dr. Smith"
}

###

### Create overlapping appointment (should fail)
POST {{AppointmentManagement.API_HostAddress}}/api/appointments
Content-Type: application/json

{
  "patientName": "Charlie Brown",
  "startTime": "2024-12-15T09:30:00",
  "endTime": "2024-12-15T10:30:00",
  "doctorName": "Dr. Smith"
}

###

### Get non-existent appointment (should return 404)
GET {{AppointmentManagement.API_HostAddress}}/api/appointments/999
Accept: application/json

###

### Update non-existent appointment (should return 404)
PUT {{AppointmentManagement.API_HostAddress}}/api/appointments/999
Content-Type: application/json

{
  "id": 999,
  "patientName": "Non Existent",
  "startTime": "2024-12-15T10:00:00",
  "endTime": "2024-12-15T11:00:00",
  "doctorName": "Dr. Nobody"
}

###

### Delete non-existent appointment (should return 404)
DELETE {{AppointmentManagement.API_HostAddress}}/api/appointments/999
Accept: application/json

###
